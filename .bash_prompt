
if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
  export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
  export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
  tput sgr0
  if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
    BLUE=$(tput setaf 20)
    CYAN=$(tput setaf 86)
    GREEN=$(tput setaf 118)
    RED=$(tput setaf 160)
    PURPLE=$(tput setaf 135)
    YELLOW=$(tput setaf 226)
    WHITE=$(tput setaf 256)
  else
    BLUE=$(tput setaf 4)
    CYAN=$(tput setaf 6)
    GREEN=$(tput setaf 2)
    RED=$(tput setaf 1)
    PURPLE=$(tput setaf 5)
    YELLOW=$(tput setaf 3)
    WHITE=$(tput setaf 7)
  fi
  BOLD=$(tput bold)
  RESET=$(tput sgr0)
else
  BLUE="\033[0;34m"
  CYAN="\033[0;36m"
  GREEN="\033[1;32m"
  PURPLE="\033[1;35m"
  RED="\033[1;31m"
  YELLOW="\033[1;33m"
  WHITE="\033[1;37m"

  BOLD=""
  RESET="\033[m"
fi


# Fastest possible way to check if repo is dirty.
function parse_git_dirty() {
   git diff --quiet --ignore-submodules HEAD 2>/dev/null; [ $? -eq 1 ] && echo '*'
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# optional
function usernamehost() {
  echo "${GREEN}$USER ${RESET}at ${PURPLE}$HOSTNAME ${RESET}in ";
}



# iTerm Tab and Title Customization and prompt customization
# http://sage.ucsc.edu/xtal/iterm_tab_customization.html

# Put the string " [bash]   hostname::/full/directory/path"
# in the title bar using the command sequence
# \[\e]2;[bash]   \h::\]$PWD\[\a\]

# Put the penultimate and current directory
# in the iterm tab
# \[\e]1;\]$(basename $(dirname $PWD))/\W\[\a\]

PS1="\[\e]2;$PWD\[\a\]\[\e]1;\]$(basename "$(dirname "$PWD")")/\W\[\a\]${BOLD}\[$YELLOW\]\w\[$RESET\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$CYAN\]\$(parse_git_branch)\[$RESET\]\n\$ \[$RESET\]"